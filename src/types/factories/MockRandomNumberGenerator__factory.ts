/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRandomNumberGenerator,
  MockRandomNumberGeneratorInterface,
} from "../MockRandomNumberGenerator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "changeLatestLotteryId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
    ],
    name: "getRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRandomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ogasaSwapLottery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ogasaSwapLottery",
        type: "address",
      },
    ],
    name: "setLotteryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nextRandomResult",
        type: "uint256",
      },
    ],
    name: "setNextRandomResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewLatestLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewRandomResult",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61083d8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100de5760003560e01c80638da5cb5b1161008c578063eed8e1ee11610066578063eed8e1ee146101ec578063ef11e8e3146101f5578063f2fde38b14610215578063fbe5d9171461022857600080fd5b80638da5cb5b14610174578063a1c4f55a146101b3578063b37217a4146101d957600080fd5b80634610852b116100bd5780634610852b14610151578063715018a61461015957806380df99361461016157600080fd5b806204fd88146100e35780632a332b2a146100ff57806342619f6614610114575b600080fd5b6100ec60025481565b6040519081526020015b60405180910390f35b61011261010d366004610726565b610230565b005b60015461013c9074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016100f6565b6101126102fd565b6101126103a4565b61011261016f366004610761565b610431565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f6565b60015474010000000000000000000000000000000000000000900463ffffffff1661013c565b6101126101e7366004610761565b6104b7565b6100ec60035481565b60015461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b610112610223366004610726565b61054a565b6003546100ec565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380a061606040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610779565b600355565b60005473ffffffffffffffffffffffffffffffffffffffff163314610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ad565b61042f6000610673565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ad565b600255565b60015473ffffffffffffffffffffffffffffffffffffffff163314610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4f6e6c79204f67617361537761704c6f7474657279000000000000000000000060448201526064016102ad565b6105476000801b6002546106e8565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ad565b73ffffffffffffffffffffffffffffffffffffffff811661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102ad565b610547815b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106f5620f4240826107ce565b61070290620f4240610791565b600160146101000a81548163ffffffff021916908363ffffffff1602179055505050565b600060208284031215610737578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461075a578182fd5b9392505050565b600060208284031215610772578081fd5b5035919050565b60006020828403121561078a578081fd5b5051919050565b600082198211156107c9577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600082610802577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b50069056fea2646970667358221220cc4f6452018b7c114a86ec980165f1fca685598092df68982126c875b035e69064736f6c63430008040033";

export class MockRandomNumberGenerator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockRandomNumberGenerator> {
    return super.deploy(overrides || {}) as Promise<MockRandomNumberGenerator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockRandomNumberGenerator {
    return super.attach(address) as MockRandomNumberGenerator;
  }
  connect(signer: Signer): MockRandomNumberGenerator__factory {
    return super.connect(signer) as MockRandomNumberGenerator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRandomNumberGeneratorInterface {
    return new utils.Interface(_abi) as MockRandomNumberGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRandomNumberGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockRandomNumberGenerator;
  }
}
