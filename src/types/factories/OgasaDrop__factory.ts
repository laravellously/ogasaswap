/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OgasaDrop, OgasaDropInterface } from "../OgasaDrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SafeTokenRecovery",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "participate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "safeRecoverWrongTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeWithdrawBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userHasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161118138038061118183398101604081905261002f916100fb565b610038336100ab565b600180556001600160a01b0381166100965760405162461bcd60e51b815260206004820152601560248201527f546f6b656e206973205a65726f20616464726573730000000000000000000000604482015260640160405180910390fd5b60601b6001600160601b031916608052610129565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010c578081fd5b81516001600160a01b0381168114610122578182fd5b9392505050565b60805160601c61102c61015560003960008181610314015281816105f801526107de015261102c6000f3fe6080604052600436106100b55760003560e01c806373b2e80e116100695780639e1a4d191161004e5780639e1a4d1914610203578063b91038c714610218578063f2fde38b1461022657600080fd5b806373b2e80e146101885780638da5cb5b146101ce57600080fd5b80634eabd3d71161009a5780634eabd3d71461013357806352482a5414610153578063715018a61461017357600080fd5b806329df599a146100cf5780634042b66f1461011457600080fd5b366100ca576100c833610246565b610246565b005b600080fd5b3480156100db57600080fd5b506100ff6100ea366004610e09565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561012057600080fd5b506002545b60405190815260200161010b565b34801561013f57600080fd5b506100c861014e366004610e6c565b6103e1565b34801561015f57600080fd5b506100c861016e366004610e23565b610575565b34801561017f57600080fd5b506100c8610720565b34801561019457600080fd5b506100ff6101a3366004610e09565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205460ff1690565b3480156101da57600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010b565b34801561020f57600080fd5b506101256107ad565b6100c86100c3366004610e09565b34801561023257600080fd5b506100c8610241366004610e09565b610872565b600260015414156102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001553460006102e760646102db60286102e183816007858a61012c6109a2565b906109b5565b906109a2565b6002549091506102f790836109c1565b60025561033b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001684836109cd565b8273ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d48260405161038391815260200190565b60405180910390a2505073ffffffffffffffffffffffffffffffffffffffff16600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558055565b6002600154141561044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102af565b600260015560005473ffffffffffffffffffffffffffffffffffffffff1633146104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b806002541015610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f41697264726f703a206e6f7420656e6f7567682066756e64730000000000000060448201526064016102af565b604051339082156108fc029083906000818181858888f1935050505015801561056d573d6000803e3d6000fd5b505060018055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f41697264726f703a2043616e6e6f74206265204f4741534120746f6b656e000060448201526064016102af565b6106cd73ffffffffffffffffffffffffffffffffffffffff831633836109cd565b6040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527ff614e7d75856fbd0ed7a5a5a1fe005c7c196dc40b29cb7976ad7749d8dd3f71f910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b6107ab6000610a5f565b565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561083557600080fd5b505afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d9190610e84565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b73ffffffffffffffffffffffffffffffffffffffff8116610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102af565b61099f81610a5f565b50565b60006109ae8284610f5a565b9392505050565b60006109ae8284610f21565b60006109ae8284610f09565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610a5a908490610ad4565b505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b36826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610be09092919063ffffffff16565b805190915015610a5a5780806020019051810190610b549190610e4c565b610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102af565b6060610bef8484600085610bf7565b949350505050565b606082471015610c89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102af565b73ffffffffffffffffffffffffffffffffffffffff85163b610d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102af565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d309190610e9c565b60006040518083038185875af1925050503d8060008114610d6d576040519150601f19603f3d011682016040523d82523d6000602084013e610d72565b606091505b5091509150610d82828286610d8d565b979650505050505050565b60608315610d9c5750816109ae565b825115610dac5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af9190610eb8565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e0457600080fd5b919050565b600060208284031215610e1a578081fd5b6109ae82610de0565b60008060408385031215610e35578081fd5b610e3e83610de0565b946020939093013593505050565b600060208284031215610e5d578081fd5b815180151581146109ae578182fd5b600060208284031215610e7d578081fd5b5035919050565b600060208284031215610e95578081fd5b5051919050565b60008251610eae818460208701610f97565b9190910192915050565b6020815260008251806020840152610ed7816040850160208701610f97565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115610f1c57610f1c610fc7565b500190565b600082610f55577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9257610f92610fc7565b500290565b60005b83811015610fb2578181015183820152602001610f9a565b83811115610fc1576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212204c77839656910fe39f3a291c63b063081e03f2013e2e81dee7362fd9dc912e4a64736f6c63430008040033";

export class OgasaDrop__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OgasaDrop> {
    return super.deploy(token_, overrides || {}) as Promise<OgasaDrop>;
  }
  getDeployTransaction(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  attach(address: string): OgasaDrop {
    return super.attach(address) as OgasaDrop;
  }
  connect(signer: Signer): OgasaDrop__factory {
    return super.connect(signer) as OgasaDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OgasaDropInterface {
    return new utils.Interface(_abi) as OgasaDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OgasaDrop {
    return new Contract(address, _abi, signerOrProvider) as OgasaDrop;
  }
}
